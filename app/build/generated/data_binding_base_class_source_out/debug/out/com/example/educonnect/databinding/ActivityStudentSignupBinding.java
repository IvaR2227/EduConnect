// Generated by view binder compiler. Do not edit!
package com.example.educonnect.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager2.widget.ViewPager2;
import com.example.educonnect.R;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.progressindicator.CircularProgressIndicator;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityStudentSignupBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton btnNext;

  @NonNull
  public final View line1;

  @NonNull
  public final CircularProgressIndicator progressBar;

  @NonNull
  public final View step1Circle;

  @NonNull
  public final View step2Circle;

  @NonNull
  public final LinearLayout stepIndicator;

  @NonNull
  public final MaterialToolbar toolbar;

  @NonNull
  public final ViewPager2 viewPager;

  private ActivityStudentSignupBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton btnNext, @NonNull View line1,
      @NonNull CircularProgressIndicator progressBar, @NonNull View step1Circle,
      @NonNull View step2Circle, @NonNull LinearLayout stepIndicator,
      @NonNull MaterialToolbar toolbar, @NonNull ViewPager2 viewPager) {
    this.rootView = rootView;
    this.btnNext = btnNext;
    this.line1 = line1;
    this.progressBar = progressBar;
    this.step1Circle = step1Circle;
    this.step2Circle = step2Circle;
    this.stepIndicator = stepIndicator;
    this.toolbar = toolbar;
    this.viewPager = viewPager;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityStudentSignupBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityStudentSignupBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_student_signup, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityStudentSignupBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnNext;
      MaterialButton btnNext = ViewBindings.findChildViewById(rootView, id);
      if (btnNext == null) {
        break missingId;
      }

      id = R.id.line1;
      View line1 = ViewBindings.findChildViewById(rootView, id);
      if (line1 == null) {
        break missingId;
      }

      id = R.id.progressBar;
      CircularProgressIndicator progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.step1Circle;
      View step1Circle = ViewBindings.findChildViewById(rootView, id);
      if (step1Circle == null) {
        break missingId;
      }

      id = R.id.step2Circle;
      View step2Circle = ViewBindings.findChildViewById(rootView, id);
      if (step2Circle == null) {
        break missingId;
      }

      id = R.id.stepIndicator;
      LinearLayout stepIndicator = ViewBindings.findChildViewById(rootView, id);
      if (stepIndicator == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.viewPager;
      ViewPager2 viewPager = ViewBindings.findChildViewById(rootView, id);
      if (viewPager == null) {
        break missingId;
      }

      return new ActivityStudentSignupBinding((ConstraintLayout) rootView, btnNext, line1,
          progressBar, step1Circle, step2Circle, stepIndicator, toolbar, viewPager);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
