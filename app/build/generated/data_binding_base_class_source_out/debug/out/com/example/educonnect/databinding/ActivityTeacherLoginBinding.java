// Generated by view binder compiler. Do not edit!
package com.example.educonnect.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.educonnect.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.progressindicator.CircularProgressIndicator;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityTeacherLoginBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton btnLogin;

  @NonNull
  public final TextInputEditText etPassword;

  @NonNull
  public final TextInputEditText etUniqueId;

  @NonNull
  public final LinearLayout loginFormContainer;

  @NonNull
  public final CircularProgressIndicator progressBar;

  @NonNull
  public final TextInputLayout tilPassword;

  @NonNull
  public final TextInputLayout tilUniqueId;

  @NonNull
  public final TextView tvAppTitle;

  @NonNull
  public final TextView tvBackToHome;

  @NonNull
  public final TextView tvLoginSubtitle;

  @NonNull
  public final TextView tvLoginTitle;

  private ActivityTeacherLoginBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton btnLogin, @NonNull TextInputEditText etPassword,
      @NonNull TextInputEditText etUniqueId, @NonNull LinearLayout loginFormContainer,
      @NonNull CircularProgressIndicator progressBar, @NonNull TextInputLayout tilPassword,
      @NonNull TextInputLayout tilUniqueId, @NonNull TextView tvAppTitle,
      @NonNull TextView tvBackToHome, @NonNull TextView tvLoginSubtitle,
      @NonNull TextView tvLoginTitle) {
    this.rootView = rootView;
    this.btnLogin = btnLogin;
    this.etPassword = etPassword;
    this.etUniqueId = etUniqueId;
    this.loginFormContainer = loginFormContainer;
    this.progressBar = progressBar;
    this.tilPassword = tilPassword;
    this.tilUniqueId = tilUniqueId;
    this.tvAppTitle = tvAppTitle;
    this.tvBackToHome = tvBackToHome;
    this.tvLoginSubtitle = tvLoginSubtitle;
    this.tvLoginTitle = tvLoginTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityTeacherLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityTeacherLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_teacher_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityTeacherLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnLogin;
      MaterialButton btnLogin = ViewBindings.findChildViewById(rootView, id);
      if (btnLogin == null) {
        break missingId;
      }

      id = R.id.etPassword;
      TextInputEditText etPassword = ViewBindings.findChildViewById(rootView, id);
      if (etPassword == null) {
        break missingId;
      }

      id = R.id.etUniqueId;
      TextInputEditText etUniqueId = ViewBindings.findChildViewById(rootView, id);
      if (etUniqueId == null) {
        break missingId;
      }

      id = R.id.loginFormContainer;
      LinearLayout loginFormContainer = ViewBindings.findChildViewById(rootView, id);
      if (loginFormContainer == null) {
        break missingId;
      }

      id = R.id.progressBar;
      CircularProgressIndicator progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.tilPassword;
      TextInputLayout tilPassword = ViewBindings.findChildViewById(rootView, id);
      if (tilPassword == null) {
        break missingId;
      }

      id = R.id.tilUniqueId;
      TextInputLayout tilUniqueId = ViewBindings.findChildViewById(rootView, id);
      if (tilUniqueId == null) {
        break missingId;
      }

      id = R.id.tvAppTitle;
      TextView tvAppTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvAppTitle == null) {
        break missingId;
      }

      id = R.id.tvBackToHome;
      TextView tvBackToHome = ViewBindings.findChildViewById(rootView, id);
      if (tvBackToHome == null) {
        break missingId;
      }

      id = R.id.tvLoginSubtitle;
      TextView tvLoginSubtitle = ViewBindings.findChildViewById(rootView, id);
      if (tvLoginSubtitle == null) {
        break missingId;
      }

      id = R.id.tvLoginTitle;
      TextView tvLoginTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvLoginTitle == null) {
        break missingId;
      }

      return new ActivityTeacherLoginBinding((ConstraintLayout) rootView, btnLogin, etPassword,
          etUniqueId, loginFormContainer, progressBar, tilPassword, tilUniqueId, tvAppTitle,
          tvBackToHome, tvLoginSubtitle, tvLoginTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
